stages:  # D√©finition des √©tapes
  - build
  - test
  - deploy

variables:
  GLOBAL_VAR: "Hello, GitLab!"
  MAVEN_CLI_OPTS: "-s settings.xml --batch-mode --errors --fail-at-end --show-version"
  DOCKER_IMAGE: "maven:3.8.6-openjdk-17"

before_script:
  - echo "Initialisation du pipeline CI/CD"

# üèóÔ∏è Build Job
build-job:
  stage: build
  image: $DOCKER_IMAGE
  script:
    - echo "Compilation du projet"
    - mvn $MAVEN_CLI_OPTS clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar
    expire_in: 1h

# ‚úÖ Test Job
test-job:
  stage: test
  image: $DOCKER_IMAGE
  script:
    - echo "Ex√©cution des tests unitaires"
    - mvn $MAVEN_CLI_OPTS test
  only:
    - main
    - develop

# üöÄ D√©ploiement en staging (branche main uniquement)
deploy-staging:
  stage: deploy
  only:
    - main
  script:
    - echo "D√©ploiement de l'application en staging"
    - scp target/*.jar user@staging-server:/opt/app/
    - ssh user@staging-server 'systemctl restart springboot-app'
  when: manual  # D√©ploiement manuel pour √©viter un d√©ploiement automatique

# üî• D√©ploiement en production avec validation manuelle
deploy-production:
  stage: deploy
  only:
    - main
  script:
    - echo "D√©ploiement en production"
    - scp target/*.jar user@prod-server:/opt/app/
    - ssh user@prod-server 'systemctl restart springboot-app'
  when: manual  # Validation manuelle requise

# üì¶ Gestion du cache
cache-job:
  stage: build
  script:
    - mkdir -p .cache
    - echo "Cache stock√©"
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .cache/
